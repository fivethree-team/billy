import { CommandModel, ActionModel } from '../types';
export declare function processAsyncArray<T>(array: T[], asyncFunction: (item: T) => Promise<any>): Promise<void>;
export declare function wrapForEach<T extends CommandModel | ActionModel>(instance: any, source: T[], before?: (s: T, ...args: any[]) => Promise<any>, after?: (s: T, ...args: any[]) => Promise<any>): Promise<any>;
export declare function parseJSON(path: any): any;
export declare function exists(path: any): boolean;
export declare function createTable(head: string[], blank?: boolean, color?: string): any;
export declare function colorize(color: string, input: string): string;
export declare function bold(input: string): string;
export declare function msToHuman(millisec: any): string;
export declare function splitCommaSeperated(aliases: string): string[];
export declare const appDir: string;
